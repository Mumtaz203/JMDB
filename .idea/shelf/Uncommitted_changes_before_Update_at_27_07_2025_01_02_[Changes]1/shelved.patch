Index: src/App.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport CreateUserForm from '@/JMDB/pages/createAcc/CreateAcc.jsx';\r\n\r\n\r\nimport {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    from,\r\n} from \"@apollo/client\"\r\nimport {onError} from \"@apollo/client/link/error\";\r\n\r\nconst erorLink=onError(({graphQLErrors}) => {\r\nif (graphQLErrors) {\r\n    graphQLErrors.map(({message}) => {\r\n        alert(`graphQL error: ${message}`);\r\n    });\r\n}\r\n});\r\n\r\n\r\nconst link=from([\r\n    erorLink,\r\n    new HttpLink({uri:'http://localhost:8080/graphql',})\r\n]);\r\n\r\n\r\nconst client=new ApolloClient({\r\ncache: new InMemoryCache(),\r\n    link: link,\r\n});\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <ApolloProvider client={client}>\r\n            <CreateUserForm />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.jsx b/src/App.jsx
--- a/src/App.jsx	(revision 9f6c9555beeb9414f2aeb0cc28ef045a78f1f4fe)
+++ b/src/App.jsx	(date 1753357628335)
@@ -1,8 +1,8 @@
-import React from 'react';
-import CreateUserForm from '@/JMDB/pages/createAcc/CreateAcc.jsx';
+/*import React from 'react';
+//import CreateUserForm from '@/JMDB/pages/createAcc/CreateAcc.jsx';
 
 
-import {
+/*import {
     ApolloClient,
     InMemoryCache,
     ApolloProvider,
@@ -33,12 +33,16 @@
 
 
 function App() {
-    return (
+    return <CreateUserForm />;
+}
 
-        <ApolloProvider client={client}>
-            <CreateUserForm />
-        </ApolloProvider>
-    );
+export default App;
+*/
+import React from 'react';
+import CreateUserForm from './pages/createAcc/CreateAcc.jsx';  // Path doğru mu?
+
+function App() {
+    return <CreateUserForm />;
 }
 
 export default App;
Index: src/JMDB/pages/createAcc/CreateAcc.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport styles from './CreateAcc.module.css';\r\nimport { gql } from '@apollo/client';\r\nimport client from '@/JMDB/pages/createAcc/apolloClient.js';\r\n\r\nconst CREATE_USER = gql`\r\n    mutation CreateUser($input: UserInput!) {\r\n        createUser(input: $input) {\r\n            id\r\n            username\r\n            email\r\n        }\r\n    }\r\n`;\r\n\r\nconst CreateUserForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleCreateUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const result = await client.mutate({\r\n                mutation: CREATE_USER,\r\n                variables: {\r\n                    input: {\r\n                        username,\r\n                        email,\r\n                        pass,\r\n                    },\r\n                },\r\n            });\r\n            setResponse(result.data.createUser);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError(err.message || 'Hata oluştu');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.loginContainer}>\r\n            <div className={styles.loginHeader}>\r\n                <h2>Create Account</h2>\r\n                <div className={styles.overlayText}>JMDB</div>\r\n            </div>\r\n            <form onSubmit={handleCreateUser} className={styles.form}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className={styles.input}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className={styles.input}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={pass}\r\n                    onChange={(e) => setPass(e.target.value)}\r\n                    className={styles.input}\r\n                    required\r\n                />\r\n                <button type=\"submit\" className={`${styles.btn} ${styles.btnCreateAcc}`}>\r\n                    Create a New Account\r\n                </button>\r\n\r\n                <div className={styles.forgot}>\r\n                    <a href=\"#\">Forgot your password?</a>\r\n                </div>\r\n                {error && <p style={{ color: 'red' }}>Hata: {error}</p>}\r\n                {response && (\r\n                    <p>\r\n                        Created User: {response.username} ({response.email})\r\n                    </p>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUserForm;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/JMDB/pages/createAcc/CreateAcc.jsx b/src/JMDB/pages/createAcc/CreateAcc.jsx
--- a/src/JMDB/pages/createAcc/CreateAcc.jsx	(revision 9f6c9555beeb9414f2aeb0cc28ef045a78f1f4fe)
+++ b/src/JMDB/pages/createAcc/CreateAcc.jsx	(date 1753357266344)
@@ -1,8 +1,8 @@
 import React, { useState } from 'react';
 import styles from './CreateAcc.module.css';
-import { gql } from '@apollo/client';
-import client from '@/JMDB/pages/createAcc/apolloClient.js';
-
+//import { gql } from '@apollo/client';
+//import client from '@/JMDB/pages/createAcc/apolloClient.js';
+/*
 const CREATE_USER = gql`
     mutation CreateUser($input: UserInput!) {
         createUser(input: $input) {
@@ -12,15 +12,15 @@
         }
     }
 `;
-
+*/
 const CreateUserForm = () => {
     const [username, setUsername] = useState('');
     const [email, setEmail] = useState('');
     const [pass, setPass] = useState('');
-    const [response, setResponse] = useState(null);
-    const [error, setError] = useState('');
+   // const [response, setResponse] = useState(null);
+   // const [error, setError] = useState('');
 
-    const handleCreateUser = async (e) => {
+   /* const handleCreateUser = async (e) => {
         e.preventDefault();
         try {
             const result = await client.mutate({
@@ -40,14 +40,14 @@
             setError(err.message || 'Hata oluştu');
         }
     };
-
+*/
     return (
         <div className={styles.loginContainer}>
             <div className={styles.loginHeader}>
                 <h2>Create Account</h2>
                 <div className={styles.overlayText}>JMDB</div>
             </div>
-            <form onSubmit={handleCreateUser} className={styles.form}>
+            <form className={styles.form}>
                 <input
                     type="text"
                     placeholder="Username"
@@ -72,19 +72,13 @@
                     className={styles.input}
                     required
                 />
-                <button type="submit" className={`${styles.btn} ${styles.btnCreateAcc}`}>
+                <button type="button" className={`${styles.btn} ${styles.btnCreateAcc}`}>
                     Create a New Account
                 </button>
 
                 <div className={styles.forgot}>
                     <a href="#">Forgot your password?</a>
                 </div>
-                {error && <p style={{ color: 'red' }}>Hata: {error}</p>}
-                {response && (
-                    <p>
-                        Created User: {response.username} ({response.email})
-                    </p>
-                )}
             </form>
         </div>
     );
